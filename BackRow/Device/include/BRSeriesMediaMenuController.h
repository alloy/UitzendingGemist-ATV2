/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BackRow.framework/BackRow
 */

#import "BRMediaMenuController.h"
#import "BRTabControlDelegate.h"

@class NSMutableDictionary, NSString, BRTabControl, NSSet, BRPreferences;
@protocol BRProvider;

@interface BRSeriesMediaMenuController : BRMediaMenuController <BRTabControlDelegate> {
@private
	NSSet *_mediaTypes;	// 136 = 0x88
	long _errorNumberForNoContent;	// 140 = 0x8c
	BOOL _forSharedContent;	// 144 = 0x90
	BOOL _showUnwatchedOnly;	// 145 = 0x91
	NSString *_series;	// 148 = 0x94
	int _sortState;	// 152 = 0x98
	BRPreferences *_prefs;	// 156 = 0x9c
	NSMutableDictionary *_savedSelectionBySortState;	// 160 = 0xa0
	BRTabControl *_tabControl;	// 164 = 0xa4
	id<BRProvider> _playlistProvider;	// 168 = 0xa8
	id<BRProvider> _dateProvider;	// 172 = 0xac
	id<BRProvider> _showProvider;	// 176 = 0xb0
	id<BRProvider> _unwatchedProvider;	// 180 = 0xb4
}
@property(assign) long errorNumberForNoContent;	// G=0x315ca271; S=0x315ca261; converted property
@property(readonly, assign) BOOL forSharedContent;	// G=0x315ca231; converted property
@property(assign) int sortState;	// G=0x315ca241; S=0x315cbaf9; converted property
@property(retain) BRTabControl *tabControl;	// G=0x315ca251; S=0x315cba7d; converted property
+ (id)seriesControllerForTypes:(id)types;	// 0x315cc2c9
+ (id)seriesControllerForTypes:(id)types forSeries:(id)series;	// 0x315cc225
+ (id)seriesUnwatchedControllerForTypes:(id)types forSeries:(id)series;	// 0x315cc1d1
+ (id)sharedSeriesControllerForTypes:(id)types;	// 0x315cc279
- (id)init;	// 0x315cc195
- (id)initWithTypes:(id)types forSeries:(id)series forSharedContent:(BOOL)sharedContent;	// 0x315cbf6d
- (id)initWithTypes:(id)types forSharedContent:(BOOL)sharedContent;	// 0x315cbf99
- (void)_buildPlaylistsMenu;	// 0x315ca475
- (BOOL)_checkProviderOK:(id)ok;	// 0x315ca305
- (id)_currentProviders;	// 0x315cabc9
- (id)_deepestFocusedControl;	// 0x315ca2e1
- (void)_handleContextMenuSelection:(id)selection;	// 0x315ca7b5
- (id)_hashForIndex:(long)index;	// 0x315ca6f1
- (id)_identifierFromTypes:(id)types;	// 0x315cc459
- (id)_initWithTypes:(id)types forSeries:(id)series forSharedContent:(BOOL)sharedContent forceFilterOutWatched:(BOOL)watched;	// 0x315cac71
- (void)_itemSelected;	// 0x315caa4d
- (id)_playlistProvider;	// 0x315ca515
- (id)_playlistsParade;	// 0x315ca399
- (long)_rowForHash:(id)hash;	// 0x315ca731
- (id)_sortOrderFilterPrefKey;	// 0x315cb3c5
- (id)actionItemAtIndex:(long)index;	// 0x315cb919
- (id)actionSelectionHandlerForItemAtIndex:(long)index;	// 0x315cb96d
- (void)arrayItemSelected:(id)selected;	// 0x315cb2c5
- (BOOL)brEventAction:(id)action;	// 0x315cbcd9
- (id)controlForContextMenuPositioning;	// 0x315cb46d
- (id)controlForContextMenuStart;	// 0x315cb481
- (void)controlWasActivated;	// 0x315cbdb9
- (void)dealloc;	// 0x315cbe6d
- (int)defaultSortItem;	// 0x315ca289
// converted property getter: - (long)errorNumberForNoContent;	// 0x315ca271
// converted property getter: - (BOOL)forSharedContent;	// 0x315ca231
- (BOOL)isValidAfterDataUpdate;	// 0x315cba05
- (id)itemForContextMenuFromSelection:(id)selection;	// 0x315cb1b9
- (id)keyForSortState:(int)sortState;	// 0x315ca2c9
- (void)layoutSubcontrols;	// 0x315cc315
- (void)mediaAssetSelected:(id)selected;	// 0x315cb291
- (BOOL)okToShowNoItemsWithCurrentProvider:(id)currentProvider;	// 0x315cb219
- (id)providerForSortState:(int)sortState;	// 0x315ca28d
- (id)providersForContextMenu;	// 0x315cb495
- (void)setDefaultSelection;	// 0x315cb0ad
// converted property setter: - (void)setErrorNumberForNoContent:(long)noContent;	// 0x315ca261
// converted property setter: - (void)setSortState:(int)state;	// 0x315cbaf9
// converted property setter: - (void)setTabControl:(id)control;	// 0x315cba7d
- (BOOL)showPlaylists;	// 0x315cb265
- (BOOL)showUnwatched;	// 0x315ca221
// converted property getter: - (int)sortState;	// 0x315ca241
// converted property getter: - (id)tabControl;	// 0x315ca251
- (void)tabControl:(id)control didSelectTabItem:(id)item;	// 0x315cb8b1
- (void)tabControl:(id)control willSelectTabItem:(id)item;	// 0x315ca281
- (void)tabControlDidChangeNumberOfTabItems:(id)tabControl;	// 0x315ca285
@end

