/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AppleTV.framework/AppleTV
 */

#import "AppleTV-Structs.h"
#import <NSObject.h> // Unknown library

@class NSURL, NSData, NSString;

@interface BRImage : NSObject {
@private
	CGImageRef _image;	// 4 = 0x4
	NSString *_accessibilityLabel;	// 8 = 0x8
	CGImageSourceRef _imageSource;	// 12 = 0xc
	float _imageWidth;	// 16 = 0x10
	float _imageHeight;	// 20 = 0x14
	int _imageOrientation;	// 24 = 0x18
	BOOL _enableCache;	// 28 = 0x1c
	NSURL *_imageURL;	// 32 = 0x20
	NSData *_imageData;	// 36 = 0x24
	BOOL _imageBufferInMemory;	// 40 = 0x28
	BOOL _rotationEnabled;	// 41 = 0x29
}
@property(retain) NSString *accessibilityLabel;	// G=0x3663bc5d; S=0x3663bc6d; converted property
@property(assign) BOOL enableCache;	// G=0x3663b985; S=0x3663b955; converted property
@property(readonly, assign) CGImageRef image;	// G=0x3663b7b9; converted property
@property(readonly, assign, getter=isImageBufferInMemory) BOOL imageBufferInMemory;	// G=0x3663c131; converted property
@property(readonly, assign, nonatomic) int orientation;	// G=0x3663c141; @synthesize=_imageOrientation
@property(readonly, assign, nonatomic) BOOL rotationEnabled;	// G=0x3663c151; @synthesize=_rotationEnabled
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef;	// 0x3663b029
+ (id)imageWithData:(id)data;	// 0x3663afe5
+ (id)imageWithName:(id)name ofType:(id)type inBundle:(id)bundle;	// 0x3663b155
+ (id)imageWithPDFURL:(id)pdfurl;	// 0x3663b06d
+ (id)imageWithPath:(id)path;	// 0x3663af7d
+ (id)imageWithRotationFromData:(id)data;	// 0x3663b245
+ (id)imageWithRotationFromPath:(id)path;	// 0x3663b205
+ (id)imageWithRotationFromURL:(id)url;	// 0x3663b1ad
+ (id)imageWithURL:(id)url;	// 0x3663af39
- (id)initWithCGImageRef:(CGImageRef)cgimageRef;	// 0x3663b29d
- (id)initWithData:(id)data;	// 0x3663b529
- (id)initWithURL:(id)url;	// 0x3663b37d
- (id)_initWithCGImageSourceRotationEnabled:(CGImageSourceRef)cgimageSourceRotationEnabled;	// 0x3663c161
- (void)_initializeCGImageWithRotation;	// 0x3663c2b9
// converted property getter: - (id)accessibilityLabel;	// 0x3663bc5d
- (float)aspectRatio;	// 0x3663b8a9
- (id)croppedImageForSize:(CGSize)size;	// 0x3663bd6d
- (void)dealloc;	// 0x3663b6e5
- (id)deletterboxedImage;	// 0x3663b995
- (void)drawImageInContext:(CGContextRef)context rect:(CGRect)rect;	// 0x3663b785
// converted property getter: - (BOOL)enableCache;	// 0x3663b985
// converted property getter: - (CGImageRef)image;	// 0x3663b7b9
- (BOOL)isAccessibilityElement;	// 0x3663bc45
// converted property getter: - (BOOL)isImageBufferInMemory;	// 0x3663c131
- (BOOL)isPowerOfTwo;	// 0x3663b8ed
- (CGRect)largestSquareRect;	// 0x3663bf6d
- (id)mapImageWithSourceRect:(CGRect)sourceRect toSize:(CGSize)size;	// 0x3663bcb1
// declared property getter: - (int)orientation;	// 0x3663c141
- (CGSize)pixelBounds;	// 0x3663b87d
- (void)purgeRawData;	// 0x367679ed
- (id)rawData;	// 0x367679e9
// declared property getter: - (BOOL)rotationEnabled;	// 0x3663c151
// converted property setter: - (void)setAccessibilityLabel:(id)label;	// 0x3663bc6d
// converted property setter: - (void)setEnableCache:(BOOL)cache;	// 0x3663b955
- (BOOL)sourceRequiresRotation;	// 0x3663b939
- (id)squareImageFromNearSquareImageWithAspectRatioLimit:(float)aspectRatioLimit;	// 0x3663c04d
@end

